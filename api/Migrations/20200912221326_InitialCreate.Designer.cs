// <auto-generated />
using System;
using BankAccountWebAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankAccountWebAPI.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200912221326_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("BankAccountWebAPI.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerName")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("BankAccountWebAPI.SingleAccountOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExecutionTimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("OperationType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrimaryAccId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryAccId");

                    b.ToTable("SingleAccOperations");

                    b.HasDiscriminator<string>("Discriminator").HasValue("SingleAccountOperation");
                });

            modelBuilder.Entity("BankAccountWebAPI.DoubleAccountOperation", b =>
                {
                    b.HasBaseType("BankAccountWebAPI.SingleAccountOperation");

                    b.Property<decimal>("ExtraTaxAmount")
                        .HasColumnType("TEXT");

                    b.Property<int>("SecondaryAccId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("SecondaryAccId");

                    b.HasDiscriminator().HasValue("DoubleAccountOperation");
                });

            modelBuilder.Entity("BankAccountWebAPI.SingleAccountOperation", b =>
                {
                    b.HasOne("BankAccountWebAPI.Account", "PrimaryAcc")
                        .WithMany()
                        .HasForeignKey("PrimaryAccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankAccountWebAPI.DoubleAccountOperation", b =>
                {
                    b.HasOne("BankAccountWebAPI.Account", "SecondaryAcc")
                        .WithMany()
                        .HasForeignKey("SecondaryAccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
